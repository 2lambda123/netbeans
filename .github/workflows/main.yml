# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: NetBeans

on:
  push:
  pull_request:

# cancel PR workflow run if PR is updated while jobs are still running
# if this is not a PR run (no github.head_ref defined), it won't be affected
concurrency: 
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
    
# primary build job, most other jobs use the artifact produced here
# artifact is only produced once in the matrix
  base-build:
    name: Build Clusters on JDK ${{ matrix.java }} 
    runs-on: ubuntu-latest
    env:
      ANT_OPTS: -Dmetabuild.jsonurl=https://raw.githubusercontent.com/apache/netbeans-jenkins-lib/master/meta/netbeansrelease.json
    strategy:
      matrix:
        java: [ '11', '17' ]
      fail-fast: false
    steps:
        
      - name: Set up JDK ${{ matrix.java }} 
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java }} 
          distribution: 'zulu'

      - name: Caching dependencies
        uses: actions/cache@v2
        with:
          path: ~/.hgexternalcache
          key: ${{ runner.os }}-${{ hashFiles('*/external/binaries-list', '*/*/external/binaries-list') }}
          restore-keys: ${{ runner.os }}-
          
      - name: Checkout ${{ github.ref }} ( ${{ github.sha }} )
        uses: actions/checkout@v3

      - name: Build NetBeans
        run: ant -Dcluster.config=release build-nozip

      - name: Prepare Artifact
        if: ${{ matrix.java == '11' }}
        run: tar -I 'zstd -9 -T0' -cf /tmp/build.tar.zst --exclude ".git" .

      - name: Upload Build
        if: ${{ (matrix.java == '11') && success() }}
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: /tmp/build.tar.zst
          retention-days: 1
          if-no-files-found: error


# secondary jobs
  linux-commit-validation:
    needs: base-build
    name: Commit Validation on Linux/JDK ${{ matrix.java }} 
    runs-on: ubuntu-latest
    env:
      ANT_OPTS: -Dmetabuild.jsonurl=https://raw.githubusercontent.com/apache/netbeans-jenkins-lib/master/meta/netbeansrelease.json
    strategy:
      matrix:
        java: [ '8', '11', '17', '19-ea' ]
      fail-fast: false
    steps:

      - name: Set up JDK ${{ matrix.java }} 
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java }} 
          distribution: 'zulu'

      - name: Download Build
        uses: actions/download-artifact@v3
        with:
          name: build

      - name: Extract
        run: tar --zstd -xf build.tar.zst

      - name: Commit Validation tests
        run: ant -Dcluster.config=release commit-validation

      - name: Upload Build
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: validation-log-linux-${{ matrix.java }}
          path: /home/runner/work/netbeans/netbeans/nbbuild/build/test/commit-validation/results/
          retention-days: 1


# last job depends on everything so that it is forced to run last even if a long job fails early
  cleanup:
    name: Cleanup Workflow Artifacts
    needs: [base-build, linux-commit-validation]
    # don't cleanup on failure() or always(), because someone might want to restart an unreliable secondary job
    # if primary jobs fail there won't be anything to cleanup anyway.
    if: success() || cancelled()
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          submodules: recursive

      - uses: ./.github/actions/delete-artifact/
        name: Delete build Artifact
        with:
          name: build
          failOnError: true
